# Simplified zshrc - everything in one file

# Environment Variables
export EDITOR='nvim'
export VISUAL="$EDITOR"
export GOPATH="$HOME/Code/Go"
export GOBIN="$GOPATH/bin"
export NVM_DIR="$HOME/.nvm"
export PULUMI_SKIP_UPDATE_CHECK=true
export OLLAMA_HOST=ollama
export COCKROACH_HOST=cockroachdb-public
export TAILSCALE_USE_WIP_CODE=1

# PATH
export PATH="$HOME/.bun/bin:$PATH:$GOBIN:$HOME/.cargo/bin"

# FZF Configuration
export FZF_DEFAULT_OPTS="
	--color=fg:#797593,bg:#faf4ed,hl:#d7827e
	--color=fg+:#575279,bg+:#f2e9e1,hl+:#d7827e
	--color=border:#dfdad9,header:#286983,gutter:#faf4ed
	--color=spinner:#ea9d34,info:#56949f
	--color=pointer:#907aa9,marker:#b4637a,prompt:#797593"

if command -v fd &> /dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
fi

# Oh My Zsh Configuration
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"
DISABLE_UPDATE_PROMPT=true
DISABLE_AUTO_UPDATE=true

plugins=(
  fzf
  git
  history-substring-search
  fast-syntax-highlighting
  zsh-autosuggestions
)

# History Configuration
HISTSIZE=50000
SAVEHIST=50000
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
setopt SHARE_HISTORY

# Directory Navigation
setopt AUTO_CD              # Type directory name to cd
setopt AUTO_PUSHD           # Push directories to stack
setopt PUSHD_IGNORE_DUPS    # Don't push duplicates
setopt PUSHD_SILENT         # Don't print directory stack

# Source Oh My Zsh
source $ZSH/oh-my-zsh.sh

# Basic Completion
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# History Substring Search Bindings
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down

# Additional Tools
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
eval "$(direnv hook zsh)"
eval "$(zoxide init zsh)"
eval "$(atuin init zsh)"

# Google Cloud SDK Lazy Loading
gcloud() {
    unset -f gcloud gsutil
    if [ -f "$HOME/Code/google-cloud-sdk/path.zsh.inc" ]; then
        . "$HOME/Code/google-cloud-sdk/path.zsh.inc"
    fi
    if [ -f "$HOME/Code/google-cloud-sdk/completion.zsh.inc" ]; then
        . "$HOME/Code/google-cloud-sdk/completion.zsh.inc"
    fi
    gcloud "$@"
}

gsutil() {
    unset -f gcloud gsutil
    if [ -f "$HOME/Code/google-cloud-sdk/path.zsh.inc" ]; then
        . "$HOME/Code/google-cloud-sdk/path.zsh.inc"
    fi
    gsutil "$@"
}

# NVM Lazy Loading (for faster shell startup)
nvm() {
    unset -f nvm node npm npx
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
    nvm "$@"
}

node() {
    unset -f nvm node npm npx
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    node "$@"
}

npm() {
    unset -f nvm node npm npx
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    npm "$@"
}

npx() {
    unset -f nvm node npm npx
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    npx "$@"
}

# System Aliases
alias cat="bat"
alias ls="eza"
alias ll="eza -la"
alias la="eza -a"
alias lt="eza --tree"
alias rg="rg -S"

# Editor Aliases
alias v="nvim"
alias vim="nvim"
alias cfg="v ~/.zshrc && source ~/.zshrc"
alias src="source ~/.zshrc"

# Utility Aliases
alias cdr='cd $(git rev-parse --show-toplevel 2>/dev/null || echo .)'
alias lg='lazygit'

# Kubernetes Aliases
alias k="kubectl"
alias kp="kubectl get pods"
alias kl="kubectl logs"
alias klf="kubectl logs -f"
alias kd="kubectl delete pod"
alias ke="kubectl exec -it"
alias kpf="kubectl port-forward"
alias kctx="kubectx"
alias kns="kubens"
alias ceph='kubectl rook-ceph ceph'

# Git Aliases
alias gs="git status -sb"
alias gco="git checkout"
alias gcm="git commit"
alias gsd="git status && git diff"

# Tmux Aliases
alias ta="tmux -a"
alias tk="tmux kill-server"
alias tks="tmux kill-session -t"

# Docker Aliases
alias dprune='docker system prune -af --volumes'
alias dstop='docker stop $(docker ps -q)'
alias drm='docker rm $(docker ps -aq)'
alias drmi='docker rmi $(docker images -q)'

# Application Aliases
alias tsm="transmission-remote"
alias temporal='temporal --env dev'
alias tailscale="/Applications/Tailscale.app/Contents/MacOS/Tailscale"
alias tssh='tailscale ssh'
alias mx0='tailscale ssh root@100.67.191.34'
alias pop='tailscale ssh pop-os'
alias crdb="cockroach sql --insecure"

# Common shortcuts
alias cl="clear && ls"
alias crb="cargo run --bin"

# Functions
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Quick restarts
kr() {
    kubectl delete pod "$@" && kubectl get pods -w
}

# Docker build & push to ghcr.io
dbp() {
    docker build -t "ghcr.io/$1" . && docker push "ghcr.io/$1"
}

# Base64 encode
b64() {
    echo -n "$1" | base64 -i -
}

ask() {
  local prompt stdin_data

  prompt="$@"

  if [[ -p /dev/stdin || ! -t 0 ]]; then
    stdin_data=$(cat)
    [[ -n $prompt ]] && prompt+=$'\n'
    prompt+="$stdin_data"
  fi

  claude --model "sonnet" -p "$prompt"
}

# Configure autosuggestions
ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# Load local configuration if it exists
[ -f ~/.zshrc.local ] && source ~/.zshrc.local
